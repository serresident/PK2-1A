<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:chrome="clr-namespace:Xceed.Wpf.Toolkit.Chromes;assembly=Xceed.WPF.Toolkit"
    xmlns:conv="clr-namespace:Xceed.Wpf.Toolkit.Core.Converters;assembly=Xceed.Wpf.Toolkit"
    xmlns:local="clr-namespace:belofor.Controls"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:themes="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit"
    xmlns:xctk="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Xceed.Wpf.Toolkit;component/Themes\Generic\Glyphs.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <conv:InverseBoolConverter x:Key="InverseBoolConverter" />

    <LinearGradientBrush x:Key="PopupDarkBorderBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#FFA3AEB9" />
        <GradientStop Offset="0.375" Color="#FF8399A9" />
        <GradientStop Offset="0.375" Color="#FF718597" />
        <GradientStop Offset="1" Color="#FF617584" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PopupBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFffffff" />
                <GradientStop Offset="1" Color="#FFE8EBED" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="NumPadToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid SnapsToDevicePixels="True">
                        <chrome:ButtonChrome
                            x:Name="ToggleButtonChrome"
                            CornerRadius="0,2.75,2.75,0"
                            RenderChecked="{Binding IsOpen, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:NumPadUpDown}}"
                            RenderEnabled="{Binding IsEnabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:NumPadUpDown}}"
                            RenderMouseOver="{TemplateBinding IsMouseOver}"
                            RenderPressed="{TemplateBinding IsPressed}">

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <ContentPresenter
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                                <Grid
                                    x:Name="arrowGlyph"
                                    Grid.Column="1"
                                    Margin="5"
                                    IsHitTestVisible="False">
                                    <Path
                                        x:Name="Arrow"
                                        Width="9"
                                        Height="5"
                                        Margin="0,1,0,0"
                                        Data="{StaticResource DownArrowGeometry}"
                                        Fill="#FF000000" />
                                </Grid>
                            </Grid>
                        </chrome:ButtonChrome>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Arrow" Property="Fill" Value="#AFAFAF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="DefaultWatermarkTemplate">
        <ContentControl
            Margin="0,0,3,0"
            Content="{Binding}"
            Focusable="False"
            Foreground="Gray" />
    </DataTemplate>

    <!--  ===============================================================================  -->
    <!--  NumPadUpDown  -->
    <!--  ===============================================================================  -->

    <Style TargetType="{x:Type local:NumPadUpDown}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="BorderThickness" Value="1,1,0,1" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static themes:ResourceKeys.ControlNormalBorderKey}}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="TextAlignment" Value="Right" />
        <Setter Property="WatermarkTemplate" Value="{StaticResource DefaultWatermarkTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:NumPadUpDown}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <xctk:ButtonSpinner
                            x:Name="PART_Spinner"
                            HorizontalAlignment="Stretch"
                            VerticalContentAlignment="Stretch"
                            AllowSpin="{TemplateBinding AllowSpin}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            ButtonSpinnerLocation="{TemplateBinding ButtonSpinnerLocation}"
                            IsTabStop="False"
                            ShowButtonSpinner="{TemplateBinding ShowButtonSpinner}">
                            <xctk:WatermarkTextBox
                                x:Name="PART_TextBox"
                                MinWidth="20"
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                AcceptsReturn="False"
                                AutoMoveFocus="{TemplateBinding AutoMoveFocus}"
                                AutoSelectBehavior="{TemplateBinding AutoSelectBehavior}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="0"
                                ContextMenu="{TemplateBinding ContextMenu}"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                FontStretch="{TemplateBinding FontStretch}"
                                FontStyle="{TemplateBinding FontStyle}"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{TemplateBinding Foreground}"
                                IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                                IsTabStop="True"
                                TabIndex="{TemplateBinding TabIndex}"
                                TextAlignment="{TemplateBinding TextAlignment}"
                                TextWrapping="NoWrap"
                                Watermark="{TemplateBinding Watermark}"
                                WatermarkTemplate="{TemplateBinding WatermarkTemplate}" />
                        </xctk:ButtonSpinner>
                        <ToggleButton
                            x:Name="_calculatorToggleButton"
                            Grid.Column="1"
                            Focusable="False"
                            IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}}"
                            IsEnabled="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}"
                            IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}"
                            Style="{StaticResource NumPadToggleButtonStyle}" />
                        <Popup
                            x:Name="PART_NumPadPopup"
                            IsOpen="{Binding IsChecked, ElementName=_calculatorToggleButton}"
                            StaysOpen="False"
                            ToolTip="{x:Static sys:String.Empty}">
                            <Popup.Resources>
                                <Style TargetType="ToolTip">
                                    <Style.Triggers>
                                        <Trigger Property="Content" Value="{x:Static sys:String.Empty}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Popup.Resources>
                            <Border
                                Padding="3"
                                Background="{StaticResource PopupBackgroundBrush}"
                                BorderBrush="{StaticResource PopupDarkBorderBrush}"
                                BorderThickness="1">
                                <StackPanel>
                                    <local:NumPad
                                        x:Name="PART_NumPad"
                                        Background="Transparent"
                                        BorderThickness="0"
                                        DisplayText="{Binding DisplayText, RelativeSource={RelativeSource TemplatedParent}}"
                                        Precision="{Binding Precision, RelativeSource={RelativeSource TemplatedParent}}" />
                                </StackPanel>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>